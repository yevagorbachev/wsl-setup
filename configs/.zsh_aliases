WINDOWS="/mnt/c"
WINUSER="$WINDOWS/Users/yevge" # change user as appropriate
REPOS="$WINUSER/Data/repos"
DOCS="\"$WINUSER/OneDrive - rit.edu/Documents\""
# cd $DOCS needs to be eval for some reason

alias python="python3"
alias pip="pip3"
alias config="vim ~/.zshrc"
alias aliases="vim ~/.zsh_aliases"
alias update=". ~/.zshrc"

alias mkae="sl" # funny
alias maek="sl" # also funny
alias dor="sl" # also also funny

function cyntax { # syntax-check c file
	gcc -fsyntax-only $1
}

function clean-sub { # make clean for immediate subdirectories
	for dir in */; do
		make -C $dir clean
	done
}

function plotcrop { # crop in-place with no margin
	pdfcrop -margin 0 $1 $1
}

function plotcrop-all { # plotcrop all .pdf in cwd
	for file in *.pdf; do
		plotcrop $file
	done
}

function maketex { # create tex project named $1
	cp ~/wsl-setup/auxiliary-files/maketex/* .
	mv texfile.tex $1'.tex'
	sed 's/{name}/'$1'/g' makefile -i
}

# use sed -i to change zsh theme
function theme {
	sed 's/ZSH_THEME=\"[a-z]*\"/ZSH_THEME=\"'$1'\"/g' ~/.zshrc -i
}

touch ~/.projects

# set current projects
# using ! as sed delimiter to not conflict with "/" in paths
function project-set {
	sed -i "${1}s!.*!$(pwd)!" ~/.projects
}

# cd to project
function project {
	eval cd \"$(sed -n "$1{p;q}" ~/.projects)\"
}

# testing toggl API (deprecated)
# GET request
function toggl-get { 
	curl -S -u $(cat ~/.toggl_token)':api_token' 'https:/api.track.toggl.com/api/v8/'$1 | python -m json.tool
}

# POST request
function toggl-post {
	vim ~/.toggl_data.json # user edits data packet
	wait $! # wait for user to finish editing
	cat ~/.toggl_data.json
	curl -S -u $(cat ~/.toggl_token)':api_token' -H "Content-Type: application/json" \
		-X POST 'https://api.track.toggl.com/api/v8/'$1 \
		-d \'$(cat ~/.toggl_data.json)\' | python -m json.tool
	> ~/.toggl_data.json # clear contents of data packet file
}
